<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.spree_ecommerce</groupId>
  <artifactId>hybrid.bdd_cucumber.automation_framework</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>hybrid.bdd_cucumber.automation_framework</name>
  <url>http://maven.apache.org</url>

  
   
  <properties>
		<selenium-version>3.14.0</selenium-version>
		<junit-version>4.12</junit-version>
		<testng-version>6.14.3</testng-version>
		<hamcrest-version>1.3</hamcrest-version>
		<webdrivermanager.version>2.2.4</webdrivermanager.version>
		<cucumber.version>1.2.5</cucumber.version>
	</properties>


	<dependencies>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>${selenium-version}</version>
		</dependency>
		<dependency>
			<groupId>io.github.bonigarcia</groupId>
			<artifactId>webdrivermanager</artifactId>
			<version>${webdrivermanager.version}</version>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<version>3.0.2</version>
		</dependency>
		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit</artifactId>
			<version>3.0.2</version>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-expressions</artifactId>
			<version>6.0.1</version>
		</dependency>

		<dependency>
			<groupId>net.masterthought</groupId>
			<artifactId>cucumber-reporting</artifactId>
			<version>3.14.0</version>
		</dependency>


		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit-version}</version>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>${hamcrest-version}</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.jexcelapi</groupId>
			<artifactId>jxl</artifactId>
			<version>2.6.12</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.17</version>
		</dependency>

		<dependency>
			<groupId>com.github.temyers</groupId>
			<artifactId>cucumber-jvm-parallel-plugin</artifactId>
			<version>5.0.0</version>
		</dependency>
		

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.2</version>
			<scope>provided</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.sikuli/sikuli-core -->
		<dependency>
			<groupId>org.sikuli</groupId>
			<artifactId>sikuli-core</artifactId>
			<version>1.2.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.sikulix/sikulixapi -->
		<dependency>
			<groupId>com.sikulix</groupId>
			<artifactId>sikulixapi</artifactId>
			<version>1.1.2</version>
		</dependency>




	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			

			<!-- This for parallel execution -->
		 	<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20.1</version>
				<configuration>
					<includes>
						<include>**/*IT.class</include>
					</includes>
					<forkCount>4</forkCount>
					<reuseForks>true</reuseForks>
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>  

			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-plugin</artifactId> 
				<version>2.20.1</version> <configuration> <includes> <include>**/BDDRunner.java</include> 
				</includes> <forkCount>4</forkCount> <reuseForks>true</reuseForks> <testFailureIgnore>true</testFailureIgnore> 
				</configuration> </plugin> -->

			<plugin>
				<groupId>com.github.temyers</groupId>
				<artifactId>cucumber-jvm-parallel-plugin</artifactId>
				<version>2.1.0</version>
				<executions>
					<execution>
						<id>generateRunners</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>generateRunners</goal>
						</goals>
						<configuration>
							<!-- Mandatory -->
							<!-- comma separated list of package names to scan for glue code -->
							<glue>com.spree_ecommerce.hybrid.cucumber.framework.steps,
							com.spree_ecommerce.hybrid.cucumber.framework.hooks</glue>
							<outputDirectory>${project.build.directory}/generated-test-sources/cucumber</outputDirectory>
							<!-- The directory, which must be in the root of the runtime classpath, 
								containing your feature files. -->
							<featuresDirectory>src/test/resources/features/</featuresDirectory>
							<!-- Directory where the cucumber report files shall be written -->
							<cucumberOutputDir>target/cucumber-parallel</cucumberOutputDir>
							<!-- comma separated list of output formats json,html,rerun.txt -->
							<format>json</format>
							<!-- CucumberOptions.strict property -->
							<strict>true</strict>
							<!-- CucumberOptions.monochrome property -->
							<monochrome>false</monochrome>
							<!-- The tags to run, maps to CucumberOptions.tags property you can 
								pass ANDed tags like "@tag1","@tag2" and ORed tags like "@tag1,@tag2,@tag3" -->
							<tags></tags>
							<!-- If set to true, only feature files containing the required tags 
								shall be generated. -->
							<filterFeaturesByTags>true</filterFeaturesByTags>
							<!-- Generate TestNG runners instead of default JUnit ones. -->
							<useTestNG>false</useTestNG>
							<!-- The naming scheme to use for the generated test classes. One 
								of 'simple' or 'feature-title' -->
							<namingScheme>simple</namingScheme>
							<!-- The class naming pattern to use. Only required/used if naming 
								scheme is 'pattern'. -->
							<namingPattern>Parallel{c}IT</namingPattern>
							<!-- One of [SCENARIO, FEATURE]. SCENARIO generates one runner per 
								scenario. FEATURE generates a runner per feature. -->
							<parallelScheme>SCENARIO</parallelScheme>
							<!-- This is optional, required only if you want to specify a custom 
								template for the generated sources (this is a relative path) -->
							<!-- <customVmTemplate>src/test/resources/cucumber-custom-runner.vm</customVmTemplate> -->
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Cucumber reporting -->
			<plugin>
				<groupId>com.trivago.rta</groupId>
				<artifactId>cluecumber-report-plugin</artifactId>
				<version>1.3.0</version>
				<executions>
					<execution>
						<id>report</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>reporting</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<sourceJsonReportDirectory>${project.build.directory}/cucumber-parallel</sourceJsonReportDirectory>
					<generatedHtmlReportDirectory>${project.build.directory}/generated-report</generatedHtmlReportDirectory>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.github.temyers
										</groupId>
										<artifactId>
											cucumber-jvm-parallel-plugin
										</artifactId>
										<versionRange>
											[2.1.0,)
										</versionRange>
										<goals>
											<goal>generateRunners</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
